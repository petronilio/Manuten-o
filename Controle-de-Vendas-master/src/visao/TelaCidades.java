/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import controle.ConectaBanco;
import controle.ControleCidade;
import controle.ModeloTabela;
import modelo.ModeloCidades;
import utilitarios.UpperCaseDocument;

/**
 *
 * @author frede
 */
public class TelaCidades extends javax.swing.JFrame {

    ConectaBanco conexaoEstado = new ConectaBanco(); // instância da classe de conexão
    ConectaBanco conexaoCidade = new ConectaBanco();
    ModeloCidades modeloCidades = new ModeloCidades(); // Instância do Modelo Cidade
    ControleCidade controleCidade = new ControleCidade();
    
    /**
     * Creates new form Estados
     */
    
    public TelaCidades() {
        initComponents();
        conexaoEstado.conectar(); // chamada do método de conexão Estado
        conexaoCidade.conectar(); // chamada do método de conexão Cidade
        preencherCombobox();
        preencherTabela("select * from cidade inner join estados on cidade.id_estado = estados.id_estado");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlEstados = new javax.swing.JPanel();
        lblCodigo = new javax.swing.JLabel();
        lblNome = new javax.swing.JLabel();
        jtfCodigo = new javax.swing.JTextField();
        jtfNome = new javax.swing.JTextField();
        btnNovo = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        lbllblEstado = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCidades = new javax.swing.JTable();
        btnPrimeiro = new javax.swing.JButton();
        btnUltimo = new javax.swing.JButton();
        btnAnterior = new javax.swing.JButton();
        btnProximo = new javax.swing.JButton();
        cbEstados = new javax.swing.JComboBox<>();
        btnCancelar = new javax.swing.JButton();
        lblCadastroEstados = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Estados");
        setResizable(false);

        pnlEstados.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblCodigo.setText("Código:");

        lblNome.setText("Nome:");

        jtfCodigo.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jtfCodigo.setEnabled(false);

        jtfNome.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jtfNome.setEnabled(false);

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/add32x32.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.setToolTipText("Cadastra um Novo Estado");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/save32x32.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.setToolTipText("Salvar o Estado");
        btnSalvar.setEnabled(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/edit32x32.png"))); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.setToolTipText("Alterar um Estado");
        btnAlterar.setEnabled(false);
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Excluir32x32.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setToolTipText("Excluir um Estado");
        btnExcluir.setEnabled(false);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/close32x32.png"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.setToolTipText("Sair do Formulário");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        lbllblEstado.setText("Estado:");

        tblCidades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblCidades);

        btnPrimeiro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Primeiro32x32.png"))); // NOI18N
        btnPrimeiro.setToolTipText("Primeiro Registro");
        btnPrimeiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrimeiroActionPerformed(evt);
            }
        });

        btnUltimo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Ultimo32x32.png"))); // NOI18N
        btnUltimo.setToolTipText("Último Registro");
        btnUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUltimoActionPerformed(evt);
            }
        });

        btnAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Anterior32x32.png"))); // NOI18N
        btnAnterior.setToolTipText("Registro Anterior");
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });

        btnProximo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Proximo32x32.png"))); // NOI18N
        btnProximo.setToolTipText("Próximo Registro");
        btnProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProximoActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Delete32x32.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setToolTipText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlEstadosLayout = new javax.swing.GroupLayout(pnlEstados);
        pnlEstados.setLayout(pnlEstadosLayout);
        pnlEstadosLayout.setHorizontalGroup(
            pnlEstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEstadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEstadosLayout.createSequentialGroup()
                        .addGroup(pnlEstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlEstadosLayout.createSequentialGroup()
                                .addComponent(lblNome)
                                .addGap(10, 10, 10)
                                .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lbllblEstado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbEstados, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlEstadosLayout.createSequentialGroup()
                                .addComponent(btnPrimeiro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAnterior)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnProximo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnUltimo)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlEstadosLayout.createSequentialGroup()
                        .addGroup(pnlEstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlEstadosLayout.createSequentialGroup()
                                .addComponent(lblCodigo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlEstadosLayout.createSequentialGroup()
                                .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSalvar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAlterar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnExcluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCancelar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSair)))
                        .addContainerGap(39, Short.MAX_VALUE))))
        );
        pnlEstadosLayout.setVerticalGroup(
            pnlEstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEstadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigo)
                    .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlEstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNome)
                    .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbllblEstado)
                    .addComponent(cbEstados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlEstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovo)
                    .addComponent(btnSalvar)
                    .addComponent(btnAlterar)
                    .addComponent(btnExcluir)
                    .addComponent(btnSair)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlEstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrimeiro)
                    .addComponent(btnUltimo)
                    .addComponent(btnAnterior)
                    .addComponent(btnProximo))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblCadastroEstados.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblCadastroEstados.setForeground(new java.awt.Color(255, 0, 0));
        lblCadastroEstados.setText("Cadastro de Cidades");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(lblCadastroEstados))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnlEstados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCadastroEstados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlEstados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(727, 412));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void preencherCombobox(){
        conexaoEstado.executaSQL("select * from estados order by nome_estado");
        cbEstados.removeAllItems();
        try{
            conexaoEstado.rs.first();
            do {
                cbEstados.addItem(conexaoEstado.rs.getString("nome_estado"));
            } while (conexaoEstado.rs.next());
        }catch (SQLException e){
          JOptionPane.showMessageDialog(null, "Erro ao preencher combobox: " + e.getMessage());  
        }
    }
    
    public void limpaCampos(){
        jtfCodigo.setText("");
        jtfNome.setText("");
    }
    
    public void setaCampos(){
        try {
            if(conexaoCidade.rs.isAfterLast()){
                conexaoCidade.rs.last();
            }
            if(conexaoCidade.rs.isBeforeFirst()){
                conexaoCidade.rs.first();
            }
            
            jtfCodigo.setText(""+conexaoCidade.rs.getInt("id_cidade"));
            jtfNome.setText(conexaoCidade.rs.getString("nome_cidades"));
            
            conexaoEstado.executaSQL("select * from estados where id_estado = " + conexaoCidade.rs.getInt("id_estado"));
            conexaoEstado.rs.first();
            cbEstados.setSelectedItem(conexaoEstado.rs.getString("nome_estado"));
            
            setBotoes(false, false, true, true, true);
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao Mostrar Dados: " + e.getMessage());
        }
    }
    
    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        try {
            modeloCidades.setNome(jtfNome.getText()); // Seta objeto Nome com o valor do jTextField 
            conexaoCidade.executaSQL("select id_estado from estados where nome_estado = '" + cbEstados.getSelectedItem()+"'");
            conexaoCidade.rs.first();
            modeloCidades.setCod_estado(conexaoCidade.rs.getInt("id_estado")); // Seta objeto Cod_Estado com o valor do rs
            controleCidade.inserirCidade(modeloCidades);
            preencherTabela("select * from cidade inner join estados on cidade.id_estado = estados.id_estado");
        } catch (SQLException ex) {
            Logger.getLogger(TelaCidades.class.getName()).log(Level.SEVERE, null, ex);
        }
      
        limpaCampos();
        
        setCampos(false, true);
        setBotoes(true, false, false, false, true);
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        try {
            modeloCidades.setCod(Integer.parseInt(jtfCodigo.getText()));
            modeloCidades.setNome(jtfNome.getText());
            modeloCidades.setCod_estado(conexaoCidade.rs.getInt("id_estado"));
            controleCidade.excluirCidade(modeloCidades);
            
            
            PreparedStatement pst = conexaoCidade.conn.prepareStatement("delete from cidade where sigla_estado = ?");
            pst.execute();
            JOptionPane.showMessageDialog(null, "Estado Excluído com Sucesso!");
            preencherTabela("select * from cidade inner join estados on cidade.id_estado = estados.id_estado");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao Excluir: " + e.getMessage());
        }
        
        limpaCampos();
        
        setCampos(false, false);
        setBotoes(true, false, false, false, true);
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        limpaCampos();
        
        jtfNome.setDocument(new UpperCaseDocument());
        
        setCampos(false, true);
        
        jtfNome.requestFocus();
        
        setBotoes(false, true, false, false, true);
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnPrimeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimeiroActionPerformed
        setBotoes(false, false, true, true, true);        
        setCampos(false, true);
        try {
            conexaoCidade.executaSQL("select * from cidade order by id_cidade");
            conexaoCidade.rs.first();
            setaCampos();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao setar o Primeiro Registro: " + e.getMessage());
        }
    }//GEN-LAST:event_btnPrimeiroActionPerformed
    
    private void btnUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUltimoActionPerformed
        setBotoes(false, false, true, true, true);        
        setCampos(false, true);
        try {
            conexaoCidade.executaSQL("select * from cidade order by id_cidade");
            conexaoCidade.rs.last();
            setaCampos();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao Setar o Último Registro: " + e.getMessage());
        }
    }//GEN-LAST:event_btnUltimoActionPerformed

    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
        setBotoes(false, false, true, true, true);        
        setCampos(false, true);
        try {
            conexaoCidade.rs.previous();
            setaCampos();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao Registro Anterior: " + e.getMessage());
        }
    }//GEN-LAST:event_btnAnteriorActionPerformed

    private void btnProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProximoActionPerformed
        setBotoes(false, false, true, true, true);        
        setCampos(false, true);
        try {
            conexaoCidade.rs.next();
            setaCampos();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao Setar o Próximo Registro: " + e.getMessage());
        }        
    }//GEN-LAST:event_btnProximoActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        try {
            
            modeloCidades.setCod(Integer.parseInt(jtfCodigo.getText()));
            modeloCidades.setNome(jtfNome.getText());
            conexaoCidade.executaSQL("select * from estados where nome_estado = '" + cbEstados.getSelectedItem() + "'");
            conexaoCidade.rs.first();
            modeloCidades.setCod_estado(conexaoCidade.rs.getInt("id_estado"));
                        
            controleCidade.alterarCidade(modeloCidades);
            
            preencherTabela("select * from cidade inner join estados on cidade.id_estado = estados.id_estado");

        
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao Alterar: " + e.getMessage());
        }
        
        limpaCampos();
        
        setCampos(false, false);
        setBotoes(true, false, false, false, true);
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        limpaCampos();
        
        setCampos(false, false);
        
        setBotoes(true, false, false, false, false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    public void preencherTabela(String SQL){
        ArrayList dados = new ArrayList();
        String [] Colunas = new String[]{"ID","Cidade","Estado"};
        conexaoCidade.executaSQL(SQL);
        
        try {
            conexaoCidade.rs.first();
            do{
              dados.add(new Object[]{conexaoCidade.rs.getInt("id_cidade"),conexaoCidade.rs.getString("nome_cidades"),conexaoCidade.rs.getString("sigla_estado")});
            }while(conexaoCidade.rs.next());
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro o ArrayList: " + e.getMessage());
        }
        
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        tblCidades.setModel(modelo);
        
        // CAMPO ID_ESTADO
        tblCidades.getColumnModel().getColumn(0).setPreferredWidth(80);
        tblCidades.getColumnModel().getColumn(0).setResizable(false);
        // CAMPO NOME_ESTADO
        tblCidades.getColumnModel().getColumn(1).setPreferredWidth(180);
        tblCidades.getColumnModel().getColumn(1).setResizable(false);
        // CAMPO SIGLA_ESTADO
        tblCidades.getColumnModel().getColumn(2).setPreferredWidth(50);
        tblCidades.getColumnModel().getColumn(2).setResizable(false);
        
        // CONFIGURAÇÃO TBLESTADOS
        tblCidades.getTableHeader().setReorderingAllowed(false);
        tblCidades.setAutoResizeMode(tblCidades.AUTO_RESIZE_OFF);
        tblCidades.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }
    
    public void setCampos(boolean Codigo, boolean Nome){
        jtfCodigo.setEnabled(Codigo);
        jtfNome.setEnabled(Nome);
    }

    
    public void setBotoes(boolean btNovo, boolean btSalvar, boolean btAlterar, boolean btExcluir, boolean btCancelar){
        btnNovo.setEnabled(btNovo);
        btnSalvar.setEnabled(btSalvar);
        btnAlterar.setEnabled(btAlterar);        
        btnExcluir.setEnabled(btExcluir);
        btnCancelar.setEnabled(btCancelar);
    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCidades().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnAnterior;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnPrimeiro;
    private javax.swing.JButton btnProximo;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnUltimo;
    private javax.swing.JComboBox<String> cbEstados;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jtfCodigo;
    private javax.swing.JTextField jtfNome;
    private javax.swing.JLabel lblCadastroEstados;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lbllblEstado;
    private javax.swing.JPanel pnlEstados;
    private javax.swing.JTable tblCidades;
    // End of variables declaration//GEN-END:variables
}
